digraph "include/sokoban.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="include/sokoban.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Essential functionalities of the game."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="include/bst_map.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bst__map_8h.html",tooltip="AVL trees containing maps."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="include/solver.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solver_8h.html",tooltip="Functions to solve a sokoban game."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/solve.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve_8c.html",tooltip="Solve a Sokoban game given as an argument of the command line. \"list\" and \"gui\" can be added on the c..."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tests/test-solver.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-solver_8c.html",tooltip="Test executable to verify the solver is working."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tests/test-bst-map.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-bst-map_8c.html",tooltip="Test for the BST (here AVL trees) functionalities."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="include/linked_list\l_map.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$linked__list__map_8h.html",tooltip="Linked list containing maps."];
  Node7 -> Node3 [id="edge7_Node000007_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tests/test-linked-list\l-map.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-linked-list-map_8c.html",tooltip="Test for the linked list functionalities."];
  Node7 -> Node9 [id="edge9_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tests/test-queue-map.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-queue-map_8c.html",tooltip="Test for the queue functionalities."];
  Node1 -> Node10 [id="edge10_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="include/loader.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$loader_8h.html",tooltip="Functions used to load a map from a .in file into a dynamically allocated structure representing the ..."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="src/play.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$play_8c.html",tooltip="Plays a Sokoban game from a path to a map given in argument."];
  Node10 -> Node12 [id="edge12_Node000010_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="src/replay.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$replay_8c.html",tooltip="Program that reads a sequence given in argument and plays the sequence by moving a player on a map...."];
  Node10 -> Node4 [id="edge13_Node000010_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node6 [id="edge14_Node000010_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node8 [id="edge15_Node000010_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node13 [id="edge16_Node000010_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="tests/test-loader.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-loader_8c.html",tooltip="Test executable to verify the map loader is working."];
  Node10 -> Node14 [id="edge17_Node000010_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="tests/test-move.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-move_8c.html",tooltip="Test executable to verify the move function is working."];
  Node10 -> Node9 [id="edge18_Node000010_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node15 [id="edge19_Node000010_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="tests/test-replay.c",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test-replay_8c.html",tooltip="Test executable to verify the replay function is working."];
  Node10 -> Node5 [id="edge20_Node000010_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge21_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="include/queue_map.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$queue__map_8h.html",tooltip="Queue containing maps."];
  Node16 -> Node3 [id="edge22_Node000016_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node9 [id="edge23_Node000016_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge24_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge25_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge26_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge27_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge28_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge29_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge30_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge31_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge32_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge33_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge34_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
